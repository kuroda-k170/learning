8/27
    新規画面作成

        ①オートコンプリートを正規化 +
        自身に代入するときの変数名
        Autocompleteでサジェスト候補を半角・全角に関係なく表示させたい場合、source関数で入力された文字列を編集し、検索時に半角・全角の違いを無視して処理するのが良い方法です。

        $(".youhou_name").autocomplete({
    source: function(request, response) {
        var normalizedTerm = normalizeInput(request.term);  // 正規化された入力値を明示的な変数に代入
        response(data);  // サジェスト候補を表示
    }

        ②実行計画

            public function get_query_execution_plan() {
            // 実行計画を取得するクエリ（MySQLの場合）
            $sql = "EXPLAIN SELECT * FROM users WHERE id = ?";
            
            // クエリを実行し、結果を取得
            $query = $this->db->query($sql, array(1));
            
            // 結果を返す
            return $query->result_array();  // 配列で返す
            }

        ③リダイレクト時にデータ渡す
            フラッシュデータを使って渡す
                CodeIgniterのsessionクラスのflashdataを使うと、セッションを通じてリダイレクト先にパラメータを一時的に渡すことができます。この方法は、パラメータをURLに表示したくない場合に便利です。

                例
                php
                public function redirect_with_flash_data() {
                    // フラッシュデータとしてパラメータをセット
                    $this->session->set_flashdata('param1', 'value1');
                    $this->session->set_flashdata('param2', 'value2');

                    // リダイレクト
                    redirect('controller_name/method_name');
                }
                受け取り側での処理
                php
                public function method_name() {
                    // フラッシュデータを取得
                    $param1 = $this->session->flashdata('param1');
                    $param2 = $this->session->flashdata('param2');

                    echo "Param1: $param1, Param2: $param2";
                }
            ④テーブルヘッダーの横幅がズレる

            考えられる原因
                ページロード時のタイミングのズレ:

                ページのロードが完了する前に、ヘッダーやボディのサイズが決定されることがあります。このため、ページの描画が完了する前にブラウザが初期状態でテーブルヘッダーを描画し、その後のスクロールやクリックでサイズが再計算される可能性があります。
                JavaScriptの処理タイミング:

                jQueryを使ってtbを描画する際、ブラウザがテーブルのレイアウトを適切に再計算する前にテーブルヘッダーが固定されることが考えられます。この場合、テーブルボディの横幅が変化した後にヘッダーの横幅が更新されていないため、ズレが発生します。
                CSSのスタイル適用のタイミング:

                テーブルのスタイル（例えばwidth: 100%やtable-layout: fixedなど）が正しく適用されるタイミングがページロード後やDOMの描画後になっていない場合、ズレが発生する可能性があります。
                解決策
                ページロード完了後にサイズを再計算: ページが完全にロードされ、tbの内容が描画された後にテーブルヘッダーとボディの横幅を再計算するようにします。これには、$(window).on('load', function(){})などを使って、ページが完全に読み込まれたタイミングでヘッダーとボディの幅を一致させる処理を追加します。

                javascript
                コードをコピーする
                $(window).on('load', function() {
                    adjustTableHeader();
                });

                function adjustTableHeader() {
                    var headerCells = $('table thead th');
                    var bodyCells = $('table tbody td');

                    bodyCells.each(function(index) {
                        var bodyWidth = $(this).outerWidth();
                        $(headerCells[index]).css('width', bodyWidth + 'px');
                    });
                }
                resizeイベントで再計算: ウィンドウのサイズが変更されたり、スクロールが発生したときにヘッダーとボディのセルの幅が再計算されるように、resizeやscrollイベントで再調整する処理を追加します。

                javascript
                コードをコピーする
                $(window).on('resize scroll', function() {
                    adjustTableHeader();
                });
                CSSでtable-layout: fixed;を使用: CSSのtable-layout: fixed;をテーブルに適用することで、すべてのセルの幅が固定されるため、幅のズレが軽減されます。これにより、ブラウザが自動的にセルの横幅を調整するのではなく、指定された幅に基づいて均等にセルの幅を決定します。

                css
                コードをコピーする
                table {
                    table-layout: fixed;
                    width: 100%;
                }
                JavaScriptの非同期処理を適切に行う: テーブルボディが非同期で描画される場合、テーブルヘッダーの幅を同期的に合わせるために、テーブルボディの描画が完了した後にヘッダーの調整を行うようにします。

                javascript
                コードをコピーする
                function renderTableBody() {
                    // tbを描画する処理
                    adjustTableHeader();  // tbの描画が完了した後にヘッダーを調整
                }
                まとめ
                このズレの主な原因は、ページロード時やリサイズ時のタイミングのズレによるものです。上記の対策を行うことで、ヘッダーとボディのセルの横幅を一致させ、ズレを防止することが可能です。

④SQLソート（アルファベット含む数字）

⑤グリッドがズレる

⑥モーダルの「削除」ボタン押下時の動作するフォーム

⑦